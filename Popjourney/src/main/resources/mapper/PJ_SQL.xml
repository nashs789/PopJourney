<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PJ">
	<select id="login" parameterType="hashmap" resultType="hashmap">
		SELECT MEM_NO, GRADE_NO, NIC, TO_CHAR(LAST_DATE, 'YYYY-MM-DD')AS LAST_DATE, TO_CHAR(SYSDATE, 'YYYY-MM-DD') AS TODAY 
		FROM MEM
		WHERE ID = #{inputID} AND PW = #{inputPW}
	</select>
	
	<select id="IDDbCk" parameterType="hashmap" resultType="hashmap">
		SELECT MEM_NO
		FROM MEM
		WHERE ID = #{storage}
	</select>
	
	<select id="IDDbCk2" parameterType="hashmap" resultType="hashmap">
		SELECT MEM_NO
		FROM MEM
		WHERE ID = #{storage}
		AND MEM_NO != #{MEM_NO}
	</select>
	
	<select id="nicDbCk" parameterType="hashmap" resultType="hashmap">
		SELECT MEM_NO
		FROM MEM
		WHERE NIC = #{storage}
	</select>
	
	<select id="nicDbCk2" parameterType="hashmap" resultType="hashmap">
		SELECT MEM_NO
		FROM MEM
		WHERE NIC = #{storage}
		AND MEM_NO != #{MEM_NO}
	</select>
	
	<insert id="join" parameterType="hashmap"> <!-- 사진경로 넣어야함 -->
		INSERT INTO MEM(MEM_NO, ID, PW, PHONE, EMAIL, EMAIL_CONFIRM, NAME, TELCOM,
         			    NIC, INTRO, BIRTH, SEX, KEYWORD_NO, MARKETING, JOIN_DATE, KEYWORD)
		VALUES(MEM_SEQ.NEXTVAL, #{inputID}, #{inputPW}, #{phone}, #{email}, #{inputCode}, #{inputName},
			   #{selectTelcom} ,#{inputNic}, #{inputIntro}, #{birth}, #{sex}, #{selectKeyword},
			   #{marketing}, SYSDATE, #{inputKeyword})
	</insert>
	
	<select id="findID" parameterType="hashmap" resultType="hashmap">
		SELECT MEM_NO, NAME, ID, SUBSTR(ID, 0, 2)AS FIRST, SUBSTR(ID, LENGTH(ID)-1, 2)AS LAST
		FROM MEM
		WHERE NAME = #{inputName}
		AND EMAIL = #{email}
		AND KEYWORD_NO = #{selectKeyword} 
		AND KEYWORD = #{inputKeyword}
	</select>
	
	<select id="findPW" parameterType="hashmap" resultType="hashmap"> 
		SELECT MEM_NO
		FROM MEM
		WHERE NAME = #{inputName}
		AND ID = #{inputID}
		AND EMAIL = #{email}
		AND KEYWORD_NO = #{selectKeyword} 
		AND KEYWORD = #{inputKeyword}
	</select>
	
	<update id="updatePW" parameterType="hashmap">
		UPDATE MEM SET PW = #{inputPW}
		WHERE MEM_NO = #{MEM_NO}
	</update>
	
	<select id="getInfo" parameterType="hashmap" resultType="hashmap">
		SELECT ID, PW, SUBSTR(PHONE, 4, 11)AS PHONE , SUBSTR(EMAIL, 1, INSTR(EMAIL, '@')-1) AS EMAIL, SUBSTR(EMAIL, INSTR(EMAIL, '@')+1) AS DOMAIN,
        NAME, TO_CHAR(BIRTH, 'YYYY') AS YEAR, SUBSTR(MONTH, 1, INSTR(MONTH, '월')-1) AS MONTH, TO_CHAR(BIRTH, 'DD') AS DAY, SEX, KEYWORD_NO, KEYWORD, TELCOM
		FROM (SELECT M.*, TO_CHAR(BIRTH, 'MON') AS MONTH
        FROM MEM M)
	 	WHERE MEM_NO = #{MEM_NO}
	</select>
	
	<update id="updateInfo" parameterType="hashmap">
		UPDATE MEM SET ID = #{inputID}, PW = #{inputPW}, TELCOM = #{selectTelcom}, PHONE = #{inputPhone},
               KEYWORD_NO = #{selectKeyword}, KEYWORD = #{inputKeyword}
		WHERE MEM_NO = #{MEM_NO}
	</update>
	
	<update id="accCnt" parameterType="hashmap">
		UPDATE MEM SET ACC_CNT = ACC_CNT+1, LAST_DATE = SYSDATE
		WHERE MEM_NO = #{MEM_NO}
	</update>
	
	<select id="getInfo2" parameterType="hashmap" resultType="hashmap">
		SELECT PHOTO_PATH, NIC, INTRO
		FROM MEM
		WHERE MEM_NO = ${MEM_NO}
	</select>
	
	<update id="updateProfile" parameterType="hashmap">
		UPDATE MEM SET PHOTO_PATH = #{photoPath}, NIC = #{inputNic}, INTRO = #{inputIntro}
		WHERE MEM_NO = #{MEM_NO}
	</update>
	
	<select id="yearRank" parameterType="hashmap" resultType="hashmap">
		SELECT JOURNAL_NO, TITLE, NIC, MEM_NO, HIT, TO_CHAR(JOURNAL_DATE, 'YYYY-MM-DD')AS JOURNAL_DATE, REGION_NAME
		FROM(SELECT J.JOURNAL_NO, J.TITLE, M.NIC, M.MEM_NO, J.HIT, J.JOURNAL_DATE, RANK() OVER(PARTITION BY JC.SUB_CATEGORY_NO ORDER BY HIT DESC)AS RK, JC.SUB_CATEGORY_NAME AS REGION_NAME, J.REGION_NO
		     FROM JOURNAL J INNER JOIN JOURNAL_CATEGORY JC
		                            ON JC.CATEGORY_NO = 1
		                            AND J.REGION_NO = JC.SUB_CATEGORY_NO
		                    INNER JOIN MEM M
		                             ON M.MEM_NO = J.MEM_NO
             WHERE TO_CHAR(J.JOURNAL_DATE, 'YY')= TO_CHAR(SYSDATE, 'YY'))
		WHERE RK BETWEEN 1 AND 5
		AND REGION_NO = #{regionNo}    
	</select>
	
	<select id="monthRank" parameterType="hashmap" resultType="hashmap">
		SELECT JOURNAL_NO, TITLE, NIC, MEM_NO, HIT, TO_CHAR(JOURNAL_DATE, 'YYYY-MM-DD')AS JOURNAL_DATE, REGION_NAME, CASE WHEN MONTH >= 10
		                                                                            THEN MONTH
		                                                                            ELSE SUBSTR(MONTH, 2)
		                                                                        END AS MONTH
		FROM(SELECT J.JOURNAL_NO, J.TITLE, M.NIC, M.MEM_NO, J.HIT, J.JOURNAL_DATE, RANK() OVER(PARTITION BY JC.SUB_CATEGORY_NO ORDER BY HIT DESC)AS RK, 
		            JC.SUB_CATEGORY_NAME AS REGION_NAME, J.REGION_NO, TO_CHAR(SYSDATE, 'MM') AS MONTH
		     FROM JOURNAL J INNER JOIN JOURNAL_CATEGORY JC
		                            ON JC.CATEGORY_NO = 1
		                            AND J.REGION_NO = JC.SUB_CATEGORY_NO
		                    INNER JOIN MEM M
		                             ON M.MEM_NO = J.MEM_NO
		      WHERE TO_CHAR(J.JOURNAL_DATE, 'YY')= TO_CHAR(SYSDATE, 'YY')
		      AND TO_CHAR(J.JOURNAL_DATE, 'MM')= TO_CHAR(SYSDATE, 'MM'))
		WHERE RK BETWEEN 1 AND 5
		AND REGION_NO = #{regionNo}  
	</select>
	
	<select id="weekRank" parameterType="hashmap" resultType="hashmap">
		SELECT JOURNAL_NO, TITLE, NIC, MEM_NO, HIT, TO_CHAR(JOURNAL_DATE, 'YYYY-MM-DD')AS JOURNAL_DATE, REGION_NAME
		FROM(SELECT J.JOURNAL_NO, J.TITLE, M.NIC, M.MEM_NO, J.HIT, J.JOURNAL_DATE, RANK() OVER(PARTITION BY JC.SUB_CATEGORY_NO ORDER BY HIT DESC)AS RK, JC.SUB_CATEGORY_NAME AS REGION_NAME, J.REGION_NO
		     FROM JOURNAL J INNER JOIN JOURNAL_CATEGORY JC
		                            ON JC.CATEGORY_NO = 1
		                            AND J.REGION_NO = JC.SUB_CATEGORY_NO
		                    INNER JOIN MEM M
		                             ON M.MEM_NO = J.MEM_NO
		      WHERE TO_CHAR(J.JOURNAL_DATE, 'YY')= TO_CHAR(SYSDATE, 'YY')
		      AND TO_CHAR(J.JOURNAL_DATE, 'MM')= TO_CHAR(SYSDATE, 'MM')
		      AND TO_CHAR(J.JOURNAL_DATE, 'IW')= TO_CHAR(SYSDATE, 'IW'))
		WHERE RK BETWEEN 1 AND 5
		AND REGION_NO = #{regionNo}
	</select>
</mapper>